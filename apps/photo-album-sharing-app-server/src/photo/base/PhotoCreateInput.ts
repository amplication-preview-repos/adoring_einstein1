/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsDate,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { AlbumPhotoCreateNestedManyWithoutPhotosInput } from "./AlbumPhotoCreateNestedManyWithoutPhotosInput";
import { PlaylistPhotoCreateNestedManyWithoutPhotosInput } from "./PlaylistPhotoCreateNestedManyWithoutPhotosInput";

@InputType()
class PhotoCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  url?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  uploadedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: () => AlbumPhotoCreateNestedManyWithoutPhotosInput,
  })
  @ValidateNested()
  @Type(() => AlbumPhotoCreateNestedManyWithoutPhotosInput)
  @IsOptional()
  @Field(() => AlbumPhotoCreateNestedManyWithoutPhotosInput, {
    nullable: true,
  })
  albumPhotos?: AlbumPhotoCreateNestedManyWithoutPhotosInput;

  @ApiProperty({
    required: false,
    type: () => PlaylistPhotoCreateNestedManyWithoutPhotosInput,
  })
  @ValidateNested()
  @Type(() => PlaylistPhotoCreateNestedManyWithoutPhotosInput)
  @IsOptional()
  @Field(() => PlaylistPhotoCreateNestedManyWithoutPhotosInput, {
    nullable: true,
  })
  playlistPhotos?: PlaylistPhotoCreateNestedManyWithoutPhotosInput;
}

export { PhotoCreateInput as PhotoCreateInput };
